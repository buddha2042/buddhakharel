/**
 * Hey!
 *
 * Base socials mixin used for every social component
 * which have share window. It provides a method for window.open()
 * and has props for window features. Also has a method for component render.
 */
import { ExtendedVue } from 'vue/types/vue';
import Vue, { CreateElement, VNode } from 'vue';
import { IWindowFeatures } from '../../types/common/windowFeatures';
export interface IBaseSocialDataOptions {
    shareDialog: Window | null;
    shareDialogCloseIntervalId: number | undefined;
}
export declare type TBaseSocialPropsOptions<T> = {
    windowFeatures: IWindowFeatures;
    shareOptions: T;
    useNativeBehavior: boolean;
};
export declare type TBaseSocialMixin<T> = ExtendedVue<Vue, IBaseSocialDataOptions, {
    generateComponent(h: CreateElement, url: string): VNode;
    openShareDialog(url: string): void;
}, unknown, TBaseSocialPropsOptions<T>>;
export declare const DEFAULT_WINDOW_FEATURES: {
    width: number;
    height: number;
};
/**
 * Wrapper around Vue mixin to pass parameters inside.
 * We use multiple parameters instead of a single object because
 * it causes problems with tree-shaking. I don't know why.
 * A little bit inconvenient, but overall OK :)
 */
export default function BaseSocials<T>(name: string, customWindowFeatures?: IWindowFeatures, customShareOptions?: T, customAriaLabel?: string, isShareOptionsRequired?: boolean, isWindowFeaturesRequired?: boolean): TBaseSocialMixin<T>;
